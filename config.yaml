# yaml
include_top : False # drop the final layer
num_classes : 144748
backbone : networks.resnet_face.resnet50 # specify your own network
backbone_kwargs :
  drop_ratio : 0.4
  mode : ir
embedding_dim : 256  # need to be consistent with backbone network
pairwise_learning :  False # True for pairwise learning, False implemented with classifier

# configs for metric learning with classifier
classifier :
  loss : losses.xent.Loss # [focal_loss,multi_logistic,xent], default xent
  loss_kwargs :
    gamma : 2
    eps : 0.000001
    # loss_kwargs : {"gamma" : 0.85,"num_classes":num_classes,"top_k":0} # multi logistic kwargs

  metric :
    metric_func : losses.circle_loss.MetricFunc # if you don't need a metric func, set "losses.linear.MetricFunc", it will implement a regular linear operation
    metric_kwargs :
      s : 256.0
      m : 0.25 # circle loss kwargs
    # metric_kwargs : {"in_features":embedding_dim, "out_features":num_classes, "s":64, "m":0.5,} # arc_face kwargs
    model_weight_path : "/path/to/metric_weight.pth" 
    optimizer : "sgd"
    hypers :
      lr : 0.0003
      lr_step : 10
      lr_decay : 0.95
      weight_decay : 0.0005
      momentum : 0.9

# configs for pair wise metric learning
pairwiser :
#  loss : losses.pairwises.multi_similarity_loss.MultiSimilarityLoss
  loss : losses.pairwises.triplet_margin_loss.TripletMarginLoss
  loss_kwargs :
    margin : 0.05  # triplet loss configs
    distance_norm : 2
    power : 1
#    alpha :  2
#    beta :  50
#    base : 0.1
  miner :
    use_miner : False # function is to be added !
    miner : ""
    miner_kwargs : {}
  xbm :
    use_xbm : False
    xbm : losses.pairwises.cross_batch_memory.CrossBatchMemory
    xbm_kwargs :
      memory_size : 250

optimizer : 'sgd' # [adam,rmsp,sgd], default optim is sgd
use_gpu : True  # use GPU or not
gpu_ids : '1,3,4'
batch_size : 24
val_interval : 1

epoch : 50
start_epoch : 0 # specify which epoch to start

hypers :
  lr : 0.0005  # initial learning rate
  lr_step : 10
  lr_decay : 0.95  # when val_loss increase, lr : lr*lr_decay
  weight_decay : 0.005
  momentum : 0.9
  gamma :  0.9
rigid_lr : True
lr_decay :
  "11" : [0.0001,0.0001]
  "20" : [0.00007,0.00007]
  "30" : [0.00005,0.00005]
  "40" : [0.00002,0.00002]


train_data : '/path/to/train/images'
dataset_loader : data_loaders.data_loader_pair.Data_Loader
train_data_kwargs:
  p : 0.9
  identity_size : 3
  img_size : 112
  crop_size : 100
  rot_angle : 10
  num_workers : 4
  pin_memory : True

validate : False
val_data : ""

pretrained : True
print_freq : 10  # print info every N batch
visualize : True # visualize or not
vis_kwargs:
  hm_size : [18,15] # fig size of a heatmap
  emb_delay : 60  # amplifier behind print freq
model_weight_path : '/path/to/backbone/weight'
save_path : "./work_space" # work path





